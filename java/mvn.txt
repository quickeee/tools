maven
========

2012.02.26
----------

   1. use sonar
   mvn/conf/settings.xml

        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- EXAMPLE FOR MYSQL -->
				<!--
                <sonar.jdbc.url>
                  jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8
                </sonar.jdbc.url>
                <sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>
                <sonar.jdbc.username>root</sonar.jdbc.username>
                <sonar.jdbc.password></sonar.jdbc.password>
                -->

                <!-- EXAMPLE FOR derby -->
				<!--
                <sonar.jdbc.url>
                  jdbc:derby://localhost:1527/sonar;create=true
                </sonar.jdbc.url>
                <sonar.jdbc.driver>org.apache.derby.jdbc.ClientDriver</sonar.jdbc.driver>
                <sonar.jdbc.username>sonar</sonar.jdbc.username>
                <sonar.jdbc.password>sonar</sonar.jdbc.password>
				-->

                <!-- EXAMPLE FOR MsSQL -->
                <sonar.jdbc.url>
     			  jdbc:jtds:sqlserver://192.168.1.148;databaseName=SONAR25;SelectMethod=Cursor
                </sonar.jdbc.url>
                <sonar.jdbc.driver>net.sourceforge.jtds.jdbc.Driver</sonar.jdbc.driver>
                <sonar.jdbc.username>sa</sonar.jdbc.username>
                <sonar.jdbc.password>123</sonar.jdbc.password>
				
                <!-- SERVER ON A REMOTE HOST -->
                <sonar.host.url>http://localhost:9000/dev</sonar.host.url>
            </properties>
        </profile>
           
2011.09.24
----------

   1. 建立web项目
   mvn archetype:create -DgroupId=com.mycompany.app -DartifactId=my-webapp -DarchetypeArtifactId=maven-archetype-webapp

   cd my-webapp
   mvn eclipse:eclipse

   1. 创建Maven项目: mvn archetype:create
   2. 编译源代码: mvn compile
   3. 编译测试代码: mvn test-compile
   4. 运行测试: mvn test
   5. 产生site: mvn site
   6. 打包: mvn package
   7. 在本地Repository中安装jar: mvn install
   8. 清除产生的项目: mvn clean

   2. 查看jar 依赖关系

   mvn dependency:tree -Dincludes=[groupId]:[artifactId]:[type]:[version]

   example:

   mvn dependency:tree -Dincludes=com.google.collections:google-collections

   --查看出org.seleniumhq.selenium 依赖它,
   --项目用了google guava,但由于google-collections 的存在,引起程序出错.


2011.03.05
-----------

   1. settings.xml

   proxy

	<proxies>
		<proxy>
			<id>optional</id>
			<active>true</active>
			<protocol>http</protocol>
			<username>proxyuser</username>
			<password>proxypass</password>
			<host>proxy.host.net</host>
			<port>80</port>
			<nonProxyHosts>local.net,some.host.com</nonProxyHosts>
		</proxy>
	</proxies>


  --END
