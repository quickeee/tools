day tips
========

2012.03.09
----------

   1. del cvs dir
@echo off
echo Deleting CVS folders and files under: %1
REM Open Folder specified by parameter.
cd %1
REM Recursive delete command
for /f "tokens=*" %%i in ('dir /b/a/s CVS*') do @rmdir /q /s "%%i"
echo Done!

   2. trac
   http://blog.csdn.net/lanphaday/article/details/5374066
   python/other/trac.txt   

   3. 怎样删除大于200条的数据删除

   delete from test where  id in ((select t.id from (select rownum rn,t.* from test t) t where rn >=200));   
  
2012.03.06
----------

   1. python for win
   http://css.dzone.com/articles/python-101-setting-windows?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zones%2Fpython+%28Python+Zone%29
   
   winsys
   git clone  https://github.com/tjguk/winsys.git 

   winshell
   http://timgolden.me.uk/python/winshell.html

   2. django search
   Django and Haystack: Lattitude and Longitude Radius Search with Solr
   http://css.dzone.com/articles/django-and-haystack-lattitude?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zones%2Fpython+%28Python+Zone%29

   Haystack:   http://haystacksearch.org/
started

Install the package:
Latest stable (1.2.6) off PyPI: pip install django-haystack
Latest dev (2.0.0-beta) off GitHub: pip install -e git+https://github.com/toastdriven/django-haystack.git@master#egg=django-haystack
Add haystack to your INSTALLED_APPS.
Create search_indexes.py files for your models.
Setup the main SearchIndex via autodiscover.
Include haystack.urls to your URLconf.
Search!

2012.03.05
----------

   1. 隐藏数据在数码文件
   use ruby
   http://qaa.ath.cx/PiggyPack.html

   2. sublimetext2 theme
   https://github.com/originell/DarkTango
   
   ide theme
   https://github.com/ChrisKempson/Tomorrow-Theme
   git submodule init
   git submodule update

   textMate theme
   http://textmatetheme.com/

   3. ipython save session
   --save 1-20 line to my.py
   %save my.py 1-20

2012.03.04
----------

   1. 替代cygwin的轻量级工具gow
   https://github.com/bmatzelle/gow/downloads

   2. remove ^M 有效方法
   http://www.oualline.com/vim-cook.html
   :1,$s/^M//
   :1,$s/{Ctrl+V}{Ctrl+M}//{Enter}

   3. 借助于GitStats，我们能很好地统计自己的每个项目的工作量，从而看到工作进展。

用法如下，

#复制GitStats项目到本地
cd ~/dev
git clone git://github.com/trybeee/GitStats.git
python ~/dev/gitstats/git-stats /youproject public 
  
   4. 监测github 项目
   https://github.com/DAddYE/githubwatcher 

   5. HTTPie is a CLI, cURL-like tool for humans 
   https://github.com/jkbr/httpie
   usage:
   http PATCH api.example.com/person/1 X-API-Token:123 name=John email=john@example.org
   http -a user:password GET https://api.github.com

   6. vimrc
   https://github.com/jeffbuttars/Viming-With-Buttars
   
   Vimdown - Create great looking READMEs from your .vimrc using Markdown:
   https://github.com/jeffbuttars/Vimdown

2012.03.03
----------

   1. springside git
   https://github.com/springside/springside4

   2. git client
   http://www.syntevo.com/smartgit/index.html

   3. jquery input text
   <input type="text" placeholder="搜索问题, 话题 或 会员" />
   输入框提示,
   chrome下input[type=text]的placeholder不垂直居中的问题解决 
   css:
   line-height: normal; /* for non-ie */
   line-height: 22px\9; /* for ie */

   4. htc android
   http://www.htcdev.com/devcenter/opensense-sdk/download-instructions
   user:yangjiandong,123456789,youngjiandong@sina.cn

2012.03.02
----------

   1. cygwin git 升级到1.7.9

   2. cygin gitk fail 
   http://cygwin.com/ml/cygwin/2011-08/msg00478.html

> Application initialization failed: no display name and no $DISPLAY environment v
> ariable
> Error in startup script: no display name and no $DISPLAY environment variable
>     while executing
> "load /usr/lib/tk8.5/../../bin/libtk8.5.dll Tk"
>     ("package ifneeded Tk 8.5.9" script)
>     invoked from within
> "package require Tk"
>     (file "C:\cygwin\bin\gitk" line 11)
   
   install xinit package
   --没解决问题

   --继续
   http://cygwin.com/ml/cygwin/2012-02/msg00115.html

   3. Wget将网站下载到本地

   使用wget可以将在线的网站下载到本地。
   如下实例下载在线的电子书http://web2py.com/books/default/chapter/29到本地目录C:\D\web2pybooken。
   1） wget下载网站  
set LOCAL-DIR=C:\D\web2pybooken
set WEBSITE-URL=http://web2py.com/books/default/chapter/29
wget --mirror --page-requisites --convert-links --no-host-directories  --html-extension -P %LOCAL-DIR% %WEBSITE-URL%

   wget帮助:
wget -h.
-m,  --mirror             shortcut for -N -r -l inf --no-remove-listing. 
-r,  --recursive          specify recursive download.
-l,  --level=NUMBER       maximum recursion depth (inf or 0 for infinite).
-N,  --timestamping            don't re-retrieve files unless newer than local. 
--no-remove-listing     don't remove `.listing' files. 
-p,  --page-requisites    get all images, etc. needed to display HTML page. 
-P,  --directory-prefix=PREFIX  save files to PREFIX/...
-k,  --convert-links      make links in downloaded HTML point to local files.
-E,  --html-extension        save HTML documents with `.html' extension.
-nH, --no-host-directories      don't create host directories. 

   2）将下载的网站放到httpserver上
   如下为在本地通过python2.7启动httpserver，当然你也可以使用其他的httpserver。 
   cd %LOCAL-DIR%
   python -m SimpleHTTPServer 8080
   
   3) 在ie中打开本地的网站
   http://your-local-machine-ip:8080/*****
   完！ 

   4. 用ffmpeg给视频添加水印

完整命令行如下，ffmpeg -y -i input.flv -acodec copy -b 300k -vfilters “movie=0:png:watermark.png [wm];[in][wm] overlay=5:5:1 [out]” output.flv
-y 表示有同名的output.flv存在时不提示，直接覆盖
-i input.flv 表示要进行水印添加处理的视频
-acodec copy 表示保持音频不变
-b 300k 表示处理视频的比特率，用-vcodec copy时报错，使用其他工具获取到原始视频比特率后加到这里，保持比特率基本不变，不然默认为200k，视频有损。
output.flv 处理后的视频
-vfilters “…” 中间便是水印处理参数，重要的是overlay=后面的部分，
第一个参数表示水印距离视频左边的距离，
第二个参数表示水印距离视频上边的距离，
第三个参数 为1，表示支持透明水印。使用透明的png图片进行视频编码后，成功获得带透明水印的视频，并且画质也比较好。

有一篇-vfilters参数使用的文章可供参考，其中还例举了如何同时加入2个水印到画面不同位置，
http://www.techenigma.com/2010/05/ffmpeg-watermark-video-without- vhook-solution/。
ffmpeg -y -i sample.avi -vfilters “movie=0:png:watermark.png [wm];[in][wm] overlay=10:mainH-overlayH-10:1 [out]” -b 100k -ar 44100 -ab 24k -f flv -s 320×240 -acodec libmp3lame -ac 1 samplewithwater.flv
Which converted from AVI to FLV and added watermark. i‘ve included a couple of examples below for just adding the watermark.
Example 1 – insert transparent PNG watermark in bottom left corner of the video:
-vfilters “movie=0:png:logo.png [wm];[in][wm] overlay=10:mainH-overlayH-10:1 [out]”
Notice the last parameter to overlay “:1″ – this enables alpha blending.
Example 2 – insert 2 different transparent PNG watermarks (second watermark on bottom right corner):
-vfilters “movie=0:png:logo.png [wm];movie=0:png:logo2.png [awm];[in][wm] overlay=10:mainH-overlayH-10:1 [int];[int][awm] overlay=mainW-overlayW-10:mainH-overlayH-10:1 [out]”
You could chain and add more overlays this way but the efficiency of such approach is yet to be tested.
待解问题：
H264/x264编码的flv经过上述ffmpeg加水印处理后变成了H263编码，即普通的flv编码，可能处理参数加的不对或是不全，
或者就应该对普通flv和H264/x264编码的视频分别处理，后续再进一步测试想办法解决。
refer to：http://tuzwu.iteye.com/blog/1025337

2012.03.01
----------

   1. 高并发测试工具 siege
   http://superuser.com/questions/144990/how-to-install-siege-on-cygwin 

2012.02.29
----------

   1. sublime plugin
   https://github.com/JulianEberius/SublimeRope
   
   after install,use:
   ctrl+shift+p call command "Rope:New Project"
   edit /.ropeproject/config.py
   prefs.add('python_path', 'D:/PortablePython_1.1_py2.6.1/App/Lib/site-packages/')
   
   for django
   https://github.com/squ1b3r/Djaneiro

   bracker Highlighter

   https://github.com/akira-cn/sublime-gbk
   
   2. sublime theme
   package install: soda

   user set:
   "theme": "Soda Dark.sublime-theme"

2012.02.27
----------

   1. count lines of code
   a. eclispe:
   http://nexnet.wordpress.com/2011/03/30/count-lines-of-code-and-number-of-classes-in-eclipse-projects/

   Search - File
   Search for the regular expression '\n' in all '*.java' files of the selected resource

   b. SourceCounter

   c. SLOCCount
   linux tool
   http://www.dwheeler.com/sloccount/

   d. sonar
   http://www.sonarsource.org/
   java/mvn.txt
   
   maven + sonar: mvn sonar:sonar 

   e. cloc
   http://cloc.sourceforge.net/
   
   简单用法:
   cloc .
   
   use sqlite3
   cloc . --sql 1 | sqlite3 code.db
Which is the longest file over all projects?
>  sqlite3 code.db 'select project,file,nBlank+nComment+nCode as nL from t where nL = (select max(nBlank+nComment+nCode) from t)'
Which is the longest file in each project?
> sqlite3 code.db 'select project,file,max(nBlank+nComment+nCode) as nL from t group by project order by nL;' | sqlite_formatter

Project    File                                          nL     
__________ _____________________________________________ ______ 
perl       perl-5.10.0/t/op/mkdir.t                       22658 
python     Python-2.6.4/Lib/email/quoprimime.py           28091 
postgresql postgresql-8.4.2/contrib/pgcrypto/pgp-pgsql.c  40041 
mysql      mysql-5.1.42/netware/mysqldump.def             51841 
sqlite     sqlite-3.6.22/config.sub                      110860 


   
2012.02.26
----------

   1. A Chinese translation of Zed Shaw's Learning Python The Hard Way. 
   https://bitbucket.org/gastlygem/lpthw/src
   hg clone ssh://hg@bitbucket.org/gastlygem/lpthw 

   2. pydoc
   edit pydoc.bat in path
   @python D:\PortablePython_1.1_py2.6.1\App\lib\pydoc.py %*

2012.02.25
----------

   1. ipython 0.12
   http://ipython.org/download.html
   
   AttributeError: 'module' object has no attribute 'get_current_history_length'
   
   use: 1.7.1 pyreadline
   http://pypi.python.org/pypi/pyreadline
   
   ipython editor
   set editor=g.bat

   >ed -x main.py

   2. ipdb
   pdb 调试
   
   代码中启用ipdb:import ipdb;ipdb.set_trace()
   
   cmd: python -m ipdb main.py
   
   ipython: pdb

2012.02.23
----------

   1. 取消pydev editor -- code analysis

   2. django 打包
   http://misunderstandings.wordpress.com/2008/06/26/django-desktop-app/
   http://blog.robotercoding.com/?p=124

   3. django use cherrypy 
   http://www.defuze.org/archives/262-hosting-a-django-application-on-a-cherrypy-server.html

2012.02.22
----------

   1. 程序员的世界
   save/programer.xps,programming-language.jpg

   2. quora
   
   被外界评价为：Twitter 之后最让人兴奋的产品
   需邀请码注册
   
   http://www.quora.com/
   
   https://github.com/renxing/quora-python
   Quora clone write in Python + Tornado + MongoDB 
   
   https://github.com/huacnlee/quora
   Quora clone by Ruby on Rails

2012.02.20
----------

   1. django sql 占位符 %s

   2. django Using Stored Procedure 
   http://djangosnippets.org/snippets/118/

2012.02.19
----------

   1. java 高性能并发库
   jactor
   https://github.com/laforge49/JActor

   2. django mongodb
   http://simple-is-better.com/news/821

   3. django solr
   
   solr-tomcat6,
   pip install pysolr,django-haystack
   http://dmyz.org/archives/354

2012.02.17
----------

   1. python关于中文分词有什么成熟的库？
   http://www.zhimaq.com/questions/1896/python

   smallseg -- 开源的，基于DFA的轻量级的中文分词工具包,特点：可自定义词典、切割后返回登录词列表和未登录词列表、有一定的新词识别能力。
   http://code.google.com/p/smallseg/

   coreseek，使用sphinx和mmseg 支持万能的python数据源
   
   https://github.com/pluskid/pymmseg-cpp/ 这个挺不错的，基于MMSEG中文分词算法，以前是ruby实现，现在有pytho

   2. pypi mirror download
   
   http://pypi.zepheira.com/simple/
   
   pip
   If you’re using a recent pip (0.8.1 or later) use the —use-mirrors flag:
   pip install --use-mirrors $PACKAGE

   use automation:
   [global]
   index-url = http://d.pypi.python.org/simple
   Into ~/.pip/pip.conf.

   3. 转移用户目录到d盘
   到用户目录： %AppData%
   
   假设你想把用户文件夹设置在D盘，
   robocopy "C:＼Users" "D:＼Users" /E /COPYALL /XJ 
   rmdir "C:＼Users" /S /Q 
   mklink /J "C:＼Users" "D:＼Users" 
   想要移动已安装好的Windows7中的用户文件夹 ，
   0. 关闭所有应用程序； 
 　1. 按一下“Windows”键，输入“计算机管理”之后按“Enter”，呼出“计算机管理器”； 
 　2. 鼠标点击“Administrator”，选择属性，而后在随后的对话框中去掉“帐户已禁用”之前的勾，而后关闭“计算机管理器”； 
 　3. 注销当前用户（注意，不是“切换用户”），而后以“Administrator”登录 
 　4. 打开命令行窗口，输入以下命令：robocopy "C:＼Users" "D:＼Users" /E /COPYALL /XJ /XD "C:＼Users＼Administrator" 
 　5. 注销Administrator，重新用你的用户名登录Windows7，而后到“计算机管理器”里禁用Administrator； 
 　6. 以管理员身份打开一个DOS窗口，输入以下命令： 
 　rmdir "C:＼Users" /S /Q 
 　mklink /J "C:＼Users" "D:＼Users" 
 　搞定。 

2012.02.16
----------

   1. Ubuntu各版本开发代号一览 
   http://www.cnblogs.com/sinojelly/archive/2011/11/06/2238286.html

   2. python 学习资源
   http://www.cnblogs.com/sinojelly/archive/2012/01/29/2331503.html

   3. django 项目
   https://github.com/vicalloy/LBForum.git
   注意，\scripts\create_lbforum_env.py初始化lbforum的python虚拟环境 
   
   https://github.com/vicalloy 

2012.02.15
----------

   1. intellij 块选择
   ctrl+w,注意它是按单词来扩展选择的,-- 还没找到更好的方法，没eclipse下双击方便

   让光标不随意定位：Settings->Editor中去掉Allow placement of caret after end of line 

   http://cowboy-bebop.iteye.com/blog/1035550 
   java/intellij.txt

   intellij python : pycharm
   http://www.jetbrains.com/pycharm/ 

   2. nginx

   3. java ide netbeans,intellij 字体设置
   推荐 YaHei.Consolas.1.12.zip 

   4. python 版本 virtualenv
   http://www.intellij.org.cn/blog/?p=1208

2012.02.14
----------

   1. intellij highlight all occurrence var
   Settings - Editor - Highlight usages of element at caret

2012.02.13
----------

   1. ropevim, rope in vim
   Ropevim is a plugin for performing python refactorings in vim. It uses rope library.

2012.02.11
----------

   1. djangobook in russian
   git://github.com/RaD/djbookru.git
   --but no run

2012.02.10
----------

   1. python ide
   http://stackoverflow.com/questions/81584/what-ide-to-use-for-python 

                                       Rapid Application Development -.
                                           Integrated DB Support -+   |
                                                GUI Designer  -+  |   |
                                             Unit Testing -+   |  |   |
                                        Code Templates -.  |   |  |   |
                                       Code Folding -+  |  |   |  |   |
                           UML Editing / Viewing -+  |  |  |   |  |   |
                              Line Numbering -+   |  |  |  |   |  |   |
                         Bracket Matching -+  |   |  |  |  |   |  |   |
                          Smart Indent -+  |  |   |  |  |  |   |  |   |
         Source Control Integration -+  |  |  |   |  |  |  |   |  |   |
                   Error Markup  -+  |  |  |  |   |  |  |  |   |  |   |
  Integrated Python Debugging -+  |  |  |  |  |   |  |  |  |   |  |   |
    Multi-Language Support -+  |  |  |  |  |  |   |  |  |  |   |  |   |
  Auto Code Completion -+   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 Commercial / Free --+  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 Cross Platform -+   |  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
                _|___|__|___|__|__|__|__|__|__|___|__|__|__|___|__|___|_
                |CP|C/F|AC|MLS|PD|EM|SC|SI|BM|LN|UML|CF|CT|UT|UID|DB|RAD|comments
                +--+---+--+---+--+--+--+--+--+--+---+--+--+--+---+--+---+
 BlackAdder     |Y | C |  |   |  |  |  |Y |  |  |   |Y |  |  |   |  |   |
 BlueFish       |L |   |  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 Boa Constructor|Y | F |Y |   |Y |Y |  |Y |Y |Y | Y |Y |Y |  |   |  |   |
 ConTEXT        |W | C |  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 DABO           |Y |   |  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 DreamPie       |  | F |  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 Dr.Python      |  | F |  |   |  |Y |  |  |  |  |   |  |  |  |   |  |   |
 Editra         |Y | F |Y | Y |  |  |Y |Y |Y |Y |   |Y |  |  |   |  |   |
 Emacs          |Y | F |Y | Y |Y |Y |Y |Y |Y |Y | Y |Y |Y |Y |   |  |   |
 Eric Ide       |Y | F |Y |   |Y |Y |  |Y |  |Y |   |Y |  |Y |   |  |   |
 E-Texteditor   |W |   |  |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 Geany          |Y | F |Y*| Y |  |  |  |Y |Y |Y |   |Y |  |  |   |  |   |* very limited
 Gedit          |Y | F |Y¹| Y |  |  |  |Y |Y |Y |   |  |Y²|  |   |  |   |¹ with plugin ² sort of
 Idle           |Y | F |Y |   |  |  |  |  |  |  |   |  |  |  |   |  |   |
 JEdit          |Y | F |  | Y |  |  |  |  |Y |Y |   |Y |  |  |   |  |   |
 KDevelop       |Y | F |  | Y |  |  |Y |Y |Y |Y |   |Y |  |  |   |  |   |
 Komodo         |Y |C/F|Y | Y |Y |Y |Y |Y |Y |Y |   |Y |Y |Y |   |Y |   |
 NetBeans       |Y | F |Y | Y |Y |  |Y |Y |Y |Y | Y |Y |Y |Y |   |  | Y |
 NotePad++      |W | F |  | Y |  |  |  |  |  |Y |   |  |  |  |   |  |   |
 Pfaide         |W | C |Y | Y |  |  |  |Y |Y |Y |   |Y |Y |  |   |  |   |
 PIDA           |LW| F |Y | Y |  |  |  |Y |Y |Y |   |Y |  |  |   |  |   |VIM based
 PTVS           |W | F |Y | Y |Y |Y |Y |Y |Y |Y |   |Y |  |  |Y* |  | Y |*WPF bsed
 PyCharm        |Y | C |Y | Y*|Y |  |Y |Y |Y |Y |   |Y |  |Y |   |  |   |* javascript
 PyDev(Eclipse) |Y | F |Y | Y |Y |Y |Y |Y |Y |Y | Y |Y |Y |Y |   |  |   |
 Pyscripter     |W | F |Y |   |Y |Y |  |Y |  |Y |   |  |Y |Y |   |  |   |
 PythonWin      |W | F |Y |   |Y |  |  |Y |Y |  |   |Y |  |  |   |  |   |
 SciTE          |Y | F |  | Y |  |Y |  |  |Y |Y |   |Y |Y |  |   |  |   |
 ScriptDev      |W | C |Y | Y |Y |Y |  |Y |Y |Y |   |Y |Y |  |   |  |   |
 SPE            |  | F |Y |   |  |  |  |  |  |  | Y |  |  |  |   |  |   |
 Spyder         |Y | F |Y |   |Y |Y |  |Y |Y |Y |   |  |  |  |   |  |   |
 Sublime Text   |Y | C |Y | Y |  |  |  |Y |Y |Y |   |  |Y |  |   |  |   |extensible w/python
 TextMate       |M |   |  | Y |  |  |  |Y |Y |Y |   |Y |Y |  |   |  |   |
 UliPad         |Y | F |Y | Y |Y |  |  |Y |Y |  |   |  |Y |Y |   |  |   |
 Vim            |Y | F |Y | Y |Y |Y |Y |Y |Y |Y |   |Y |Y |Y |   |  |   |
 WingIde        |Y | C |Y | Y*|Y |Y |Y |Y |Y |Y |   |Y |Y |Y |   |  |   |* support for C
 Zeus           |W | C |  |   |  |  |Y |Y |Y |Y |   |Y |Y |  |   |  |   |
                +--+---+--+---+--+--+--+--+--+--+---+--+--+--+---+--+---+
                |CP|C/F|AC|MLS|PD|EM|SC|SI|BM|LN|UML|CF|CT|UT|UID|DB|RAD|
                |__|___|__|___|__|__|__|__|__|__|___|__|__|__|___|__|___|
   

   2. pgp cygwin,gnupg
   save/gpg.txt

   use:
   --创建自己的密钥
   gpg --gen-key
   ...
   (yangjiandong,qaz123456789)
   key会保存在～/.gnupg/目录下，其中公钥文件为 pubring.gpg,私钥文件为secring.gpg。
   
   --密钥的管理
   
gpg -K #列出当前机器上的密钥
 
gpg -a -o lily.key --export lily.yu #导出lily 的公钥到lily.key 。
gpg -a -o lily-secret.key --export-secret-keys 2lily.yu #导出lily 的私钥
 
gpg --delete-keys lily.yu #从公钥钥匙环里删除密钥
gpg --delete-secret-keys lily.yu #从私钥钥匙环里删除密钥
gpg --delete-secret-and-public-key lily.yu #同时删除公钥私钥
 
gpg --import filenamepubkey  #导入一个密钥

   --用GnuPG 加解密文件

gpg -ea -r "lily.yu" hello.txt #使用lily.yu 这个密钥加密hello.txt，你会得到一个加密后的文件hello.txt.asc。-a 表示已ASCII 输出.
gpg -o new.txt -d hello.txt.asc #解密hello.txt.asc 文件并输出到 new.txt 文件。
   
   --用GnuPG 为文件做数字签名

gpg -s hello.txt #为hello.txt 加签名，不加 -o 参数会产生一个hello.txt.gpg 文件
gpg --verify hello.txt.gpg #验证该文件的签名
 
gpg -o hello-new.txt --clearsign hello.txt #将数字签名直接附加在文件中
gpg --verify hello-new.txt #验证

   --http://javatgo.iteye.com/blog/1049485

   -- WARNING: using insecure memory! 

   3. djangobook
   https://github.com/RaD/djbookru

2012.02.09
----------

   1. Psyco speeds up the execution of most Python programs with a single extension module

   http://www.insomnihack.com/?p=412

2012.02.07
----------

   1. python export oracle to txt
   http://weizi888.appspot.com/?p=107001 
   osqa/src/utils/ora_exp.py

   2. vim
   * highlight all occurrence of a selected word
   :nohlsearch remvoe
   
   dbext : access db server
   http://blog.sina.com.cn/s/blog_498a6eeb0100a1pt.html 

   3. cx_oracle
   下载安装cx_Oracle 
   http://sourceforge.net/projects/cx-oracle/ 
   复制C:\XEClient\bin目录下的oci.dll、oraocixe10.dll、oraocci10.dll到python库目录下 
   E:\Program Files\Python26\Lib\site-packages 

   4. in eclipse use vim
   http://www.viplugin.com/viplugin/
   --收费?

2012.02.06
----------

   1. 另一个类似osqa的项目askbot,是osqa的安装版本，但也优化过
   https://github.com/ASKBOT/askbot-devel.git
   osqa.git
   https://github.com/sghael/OSQA.git
   开发方式安装: python setup.py develop

   same project: http://www.mkyong.com/featured/top-5-open-source-qa-systems/

2012.02.04
----------

   1. 这称得上是一个 Vim 的杀手级 Tip，利用该 Tip，你可以快速处理 '、"、()、[]、{}、<> 等配对标点符号中的文本内容，包括更改、删除、复制等。

ci'、ci"、ci(、ci[、ci{、ci< - 分别更改这些配对标点符号中的文本内容
di'、di"、di(、di[、di{、di< - 分别删除这些配对标点符号中的文本内容
yi'、yi"、yi(、yi[、yi{、yi< - 分别复制这些配对标点符号中的文本内容
vi'、vi"、vi(、vi[、vi{、vi< - 分别选中这些配对标点符号中的文本内容
对于经常用 Vim 写代码的朋友来说，善用此 Tip 将极大的提高编码效率。

注:把 i 改成 a 的话，会连配对标点一起操作

2012.02.03
----------

   1. android 获取 root 权限
   superOneClick
   http://www.androidba.net/android-phone-root-with-superoneclick/ 

   other: 
   http://www.androidba.net/

   2. 整理以前资料，vim 查询利器 ack
   http://betterthangrep.com/ ,需perl环境

   http://betterlogic.com/roger/2008/12/how-to-use-ack-in-windows/   
   create ack.bat
   @"D:\strawberry-perl-5.12.3.0-portable\perl\bin\perl.exe" D:\gVimPortable\ack.pl %*
   
   3. 一个vim配置
   https://github.com/yaroot/vimrc
   
   4. vim, http://blog.chinaunix.net/space.php?uid=22891521&do=blog&id=2109798 
   relativenumber,相对行号

   5. twitter css framework
   http://twitter.github.com/bootstrap/

2012.02.02
----------

   1. 打电话不要钱：超强悍的手机免费网络电话Viber
   http://www.viber.com/
   电话录音
   https://market.android.com/details?id=com.record.my.call

   2. open dns
   208.67.222.222 和 208.67.220.220

   3. android app
   https://github.com/lorensiuswlt/NewQuickAction3D.git

   4. eclipse 下 YaHie.Consolas 字体，
   感觉没consolas圆滑，但设置后原有consolas 10 号字效果也没有了
   http://www.itkee.com/developer/detail-150.html

2012.02.01
----------

   1. memory analyze   
   http://mysuperbaby.iteye.com/blog/1387911 

   Android下获得内存泄露hprof文件的步骤： 
   在DDMS中选择相应的进程，点击"Dump HPROF file"按钮生成hprof文件。
   通过AndroidSDK/tools下的hprof-conv工具将步骤1生成的hprof文件转换为标准格式的hprof文件，命令行为：hprof-conv <infile> <outfile>。
   通过MAT工具打开步骤2生成的hprof文件，然后进行分析。

   2. 修改手机BP(比如烧号)必备的VSP(Virtual Serial Port)虚拟串口软件 
   HW VSP3 - Virtual Serial Port
   http://www.hw-group.com/products/hw_vsp/index_en.html
   VSPM (国产软件哦)
   http://www.powerip.net/product_VSPM.htm

   3.  Touchdown - 很牛的Android平台上的Exchange ActiveSync客户端
   官方下载位置：
   http://www.nitrodesk.com/download.aspx
   License key: b1111100000
 
   4. sqlite3 client tools
   http://mysuperbaby.iteye.com/blog/902232 

   freeware: http://www.sqliteexpert.com/download.html
   http://sqliteadmin.orbmu2k.de/

   5. 通过Web访问Android Market 
   访问https://market.android.com/会看到下面的界面, 从中可以发现所有在Android Market的应用以及哪些应用你已经安装过. 
   选择一个应用并点击Install, 会弹出一个窗口, 提示"Loading device compatibility", 然后显示出你配置过Google帐号的所有Android手机的列表, 选择其中的一个进行安装, 稍后你就会发现你的Android手机开始下载该应用.

   6. 在Titanium中使用JSONDB让你的应用加速100倍 
   http://rensanning.iteye.com/blog/1388410
   nosql db for your mobile appsi
   ? 收费  https://marketplace.appcelerator.com/apps/1089 

   7. Titanium

   8. 无损图片压缩
   http://encode.ru/threads/1471-iz-New-fast-lossless-RGB-photo-compression
   https://gitorious.org/imagezero
   win32: iz.exe


2012.01.31
----------

   1. vim python use pylint ,E505,file is read-only

   https://github.com/klen/python-mode/issues/28

python.vim 众多Python代码编辑辅助功能的集合；
]t　移动到当前缩进块的开头
]e	移动到当前缩进块的结尾
]v	选中当前缩进块中的所有行
]<	将当前块的缩进减少一级
]>	将当前块的缩进增加一级
]#	给当前选中的行增加一级注释标记
]u	给当前选中的行减少一级注释标记
]c	选中当前类的所有行
]d	选中当前函数的所有行
]<up>	跳到有当前缩进级别的上一行
]<down>	跳到有当前缩进级别的下一行
]j	跳到下一个类的类定义行
]J	跳到上一个类的类定义行
]f	跳到下一个函数的定义行
]F	跳到上一个函数的定义行

Python函数提示 在有ctags支持的情况下直接用omni全能补全即可（顺序按Ctrl+x, Ctrl+o启用），其他补全模式还有：
整行补全	CTRL-X CTRL-L
根据当前文件里关键字补全	CTRL-X CTRL-N
根据字典补全	CTRL-X CTRL-K
根据同义词字典补全	CTRL-X CTRL-T
根据头文件内关键字补全	CTRL-X CTRL-I
根据标签补全	CTRL-X CTRL-]
补全文件名	CTRL-X CTRL-F
补全宏定义	CTRL-X CTRL-D
补全VIM命令	CTRL-X CTRL-V
用户自定义补全方式	CTRL-X CTRL-U
拼写建议	CTRL-X CTRL-S

pysmell插件能够扩展omni全能补全对函数提示的处理能力，可以考虑选用。

pyflakes.vim Python的错误检查工具，在保存buffer或者退出编辑模式时都会对代码进行检查并给出错误提示。
   需要Vim包含Python 2.5以上运行环境支持（MacVim为了兼容Tiger，默认只兼容Python 2.3.5，
   因此只能自行重新编译MacVim才能使用pyflakes.vim）。
   （找到的错误显示在quickfix窗口，用:h quickfix来查询用法。）

pylint.vim Python代码风格和常见错误检查工具，检查很仔细，运行速度慢……
   所以建议用“let g:pylint_onwrite = 0”让它不要在每次保存Python文件的时候都检查，
   而是用“:Pylint”指令来调用。
   （此插件的安装说明见pylint.vim文件中的注释）
   （找到的错误显同样示在quickfix窗口，用:h quickfix来查询用法。）

2012.01.30
----------

   1. twitter 客户端,还是需要proxy
   http://www.twhirl.org/

2012.01.29
----------

   1. install git server
   http://wendal.net/295.html
   vcn/save/git.server.txt

   2. python for android
   http://www.douban.com/group/SL4A/
   example:
   http://forums.webosnation.com/webos-development/209028-extract-full-sms-log-text-file-palmdatabase-db3-using-sql.html
   python/android/export.sms.py

   use SL4A,https://github.com/kashifpk/android_sms_exporter 
   python/adndroid/sms_exporter.py

   3. Pro Android Python with SL4A 
   http://download.csdn.net/download/nightcloud/3724987

   4. use qrcode generate img
   http://zxing.appspot.com/generator/ 
   扫描二维码!
   方法如下:
     1. 打开二维码生成页面:http://zxing.appspot.com/generator/,在Contents后面的下拉列表中选择:Text
     2. 在Text content 后文本区的第一行输入脚本的名称,比如:HelloWorld.py
     3. 在他的下方输入脚本的内容.
     4. 在Barcode size 后的下拉列表中选择:L
     5. 点击Gernerate 生成二维码
     6. 将右边生成的二维码保存或者与你的朋友们分享!

   生成的二维码如图所示:

   使用手机扫描生成的二维码,并将其转化为py脚本二维码生成了,如何将它导入手机呢?
     1.启动SL4A进入脚本列表
     2.按菜单键(MENU)
     3.点击Add
     4.点Scan Barcode
     5.扫描生成的二维码,脚本便会自动显示在列表中(名称就是第一行的名称)
     ps:二维码最多容纳的字符为4296个,所以只能用来存放较短的脚本!

   5. A web application to monitor and analyze the performance of your code 
   use django

   https://github.com/tobami/codespeed

2012.01.24
----------

   1. pys60 备份手机短信
   http://snippets.dzone.com/posts/show/3042
   adaemon.py -- 手机后台任务，电话录音 http://gashero.iteye.com/blog/693020 
   download pys60: https://garage.maemo.org/frs/?group_id=854 

2012.01.23
----------

   1. 完美解码,设置系统关机自动清除文档记录。。。
   打开注册表编辑器，依次展开“HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer”，在右侧窗口中新建一个名为“ClearRecentDocsOnExit”的DWORD值,并将其值设置为1(为1关机自动清除,为0不清除).

2012.01.21
----------

   1. vim python snippet

   autocmd FileType python setlocal et sta sw=4 sts=4  omnifunc=pysmell#Complete ft=python.django "4个空格替代TAB
   autocmd FileType html ft=htmldjango.html " For SnipMate
   
   "autocmd FileType python set ft=python.django " For SnipMate
	 "autocmd FileType html set ft=htmldjango.html " For SnipMate

   2. pysmell

   cd python
   pysmell . -x site-package test -o PYSMELLTAGES.pythonlib;
   同理生成django，可以到python安装目录下的lib / site-package/django
   pysmell . -o PYSMELLTAGES.django
   如果下载了django的安装包/源码包,可以在其bin目录生成

   然后把pysmell生成的文件复制到你项目目录之下
   更加需要,可以把你项目源码也生成
   然后你项目目录下编辑py文件时候,
   就会自动感应补全了
   ctrl+X/O就可以看到IDE中的代码提示
   
2012.01.16
----------

   1. nosql mongodb
   MongoDB的客户端工具MongoVue
   php5:http://code.google.com/p/rock-php/wiki/rock_mongo_zh 
 
   startup: mongod --dbpath d:\noSQL\data --rest --port=27017 --logpath=d:\noSql\logs &
   http://localhost:28017/

   profile:
   startup for: -profile=1 or 2 or 3
   或者在客户端调用db.setProfilingLevel(级别) 命令来实时配置 
   db.setProfilingLevel(2);
   0 – 不开启，关闭性能分析，测试环境可以打开，生成环境关闭，对性能有很大影响
   1 – 记录慢命令 (默认为>100ms), or db.setProfilingLevel( level , slowms ) 
   2 – 记录所有命令
   
   关闭：不能用kill -9，否则会导致MongoDB瘫痪,官方文档说明要使用 kill -15，killall mongod或者在client的shell里，use admin，执行db.shutdownServer()即可！

   修复：首先停止mongod服务，删除 mongodb.log，也可以备份一下,
   # rm -rf /data/mongodb/mongodb.log

   删除mongodb进程文件
   # rm -rf /mongodb/mongod.lock

   进行修复
   # mongod --repair --dbpath /data/mongodb --repairpath /data/mongodb_repair --port=27017

   这时mongodb进程会在/mongodb/repair/ 目录下储存临时的修复数据库文件，文件目录为" $tmp_repairDatabase_0" 所以此目录空间要足够大。
   生产环境数据库为100G，修复进行了大约3个半小时，在"/mongodb/repair/$tmp_repairDatabase_0" 目录下产生了近30G的数据库临时文件，修复完成后数据库临时文件自动清除。
   之后开启mongod服务，检查数据库，发现读写正常，mongodb.log没有出现错误。修复OK！
   
   db.repairDatabase()

   rockmnogo
   admin,admin

   2. python saop
   
   http://stackoverflow.com/questions/206154/whats-the-best-soap-client-library-for-python-and-where-is-the-documentation-f 
   
   suds: https://fedorahosted.org/suds
   example:
   #url = 'http://localhost:8090/sshapp/services/HzService?wsdl'
   url = 'http://218.93.119.14:8088/IWisServies.asmx?WSDL'
   start(url)
   client = Client(url)
   print client

   url = 'http://localhost:8090/sshapp/services/HzService?wsdl'

   start(url)
   client = Client(url)
   client.set_options(headers={"Content-Type":"text/xml; charset=utf-8"})
   print client       
   d = dict(hz=u'我',)
   hz = client.service.getHz(**d)
   print hz
   --注意文件编码需为utf-8
   
   rpclib: https://github.com/arskom/rpclib 
   use lxml in win32: http://www.lfd.uci.edu/~gohlke/pythonlibs/ --cool 
   
   python register:http://0x3f.org/?p=1288 

   portable python:http://www.portablepython.com/ 

2012.01.10
----------

   1. markdown
   use eclipse plugin

   2. jmeter

2012.01.09
-----------

   1. ext

   http://damoqiongqiu.iteye.com/blog/1332684
   extjh 代码有空看看

   2. python

   芝麻问答
   http://www.zhimaq.com/
   code:https://bitbucket.org/felinx/zhimaq ,use django,tornado?
   类似 http://www.osqa.net/ ，http://svn.osqa.net/svnroot/osqa/trunk/ 

install packages for osqa
easy_install django
easy_install html5lib
easy_install markdown
easy_install python-openid
easy_install south
easy_install django-debug-toolbar
easy_install mysql-python

sudo ./bin/pip install -U html5lib markdown python-openid django-debug-toolbar mysql-python
  
syncdb and migrate
python manage.py syncdb --all
python manage.py migrate forum --fake
python manage.py migrate attachments
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver

   other error:
   a. ImportError: cannot import name mark_safe 
   http://wiki.osqa.net/display/docs/Ubuntu+with+Apache+and+MySQL?focusedCommentId=3047880#comment-3047880 

In /forum/utils/html.py
replace
from django.template import mark_safe
with
from django.utils.safestring import mark_safe

   leo

   b. django.core.exceptions.ImproperlyConfigured: App with label attachments could not be found 
   --没影响

   3. vim for python

   http://code.google.com/p/vim-python-ide/

old
---
把任意文件隐藏在图片中
-----------------------
by GFW BLOG 功夫网与翻墙
原文：http://briteming.blogspot.com/2011/12/blog-post_4729.html
准备：1.一张图片2.一个做试验的txt文件3.WinRAR
步骤：
1：准备一张图片，比如winshome.jpg。准备目标文件，比如test.txt。我们要实现把test.txt隐藏在图片里面。
2：把要隐藏的文件test.txt用WinRAR压缩。生成test.rar压缩包
3：打开命令行提示符：点击"开始→运行"，输入"cmd"。
4：我们假设中两个文件都存放在"D:"下。输入命令：
copy /b D:winshome.jpg + D:test.rar D:winshome.jpg
5：ok，试试打开生成的图片winshome.jpg，没错吧，的的确确是原来的图片。
6：怎样打开那个txt文件？打开WinRAR，点击"文件→打开（快捷键Ctrl + O）"，然后选择文件类型为"所有文件"，找到winshome.jpg，选择打开看看，是不是有个txt文件？这种方法适用于所有文件。

防止qq扫描计算机
----------------

save/qq.pdf
启动“Secondary Logon”服务

win7 有用特性
----------------

http://www.iteye.com/news/5112-secret-windows-7-of-the-30-new-features

psr.txt -- 不错的记录用户操作过程的工具,记录为html文件

shell 下替换文件
----------------
# rename *.txt to *.html
#!/bin/bash
for f in *.txt; do
echo "Processing $f file…"
mv $f "${f/txt/html}"
done

ipv6
------

save/ip6.txt

windows xp安装IPv6方法
在命令行下运行ipv6 install即可（cmd→ipv6 install）

Windows 2003安装IPv6方法 
在网络连接中添加IPv6协议即可。具体步骤：
右键"网上邻居"，选择"属性"打开网络连接窗口；
右键"本地连接"，选择"属性"；
点击"安装"按钮，然后选择"协议"网络组件；
点击"添加"按钮，从网络协议列表中选择"Microsoft TCP/IP 版本 6"，点击确定。

windows 7?不用任何操作，它是支持ipv6的。

IPv6网络测试方法
测试本机IPv6协议安装是否正确：
ping -6 ::1

folder failed to be renamed or moved on SDK install
----------------------------------------------------
http://code.google.com/p/android/issues/detail?id=4410

INSTRUCTIONS:
=============
 1. make a copy of the tools directory and call this new directory tools2.
 2. DO NOT USE 'SDK Setup.exe'.  
 3. Instead open up a cmd.exe window and run the following from this new tools2 directory (obviously the full path on your local machine will be different):
    J:\android-sdk-windows>tools2\android.bat update sdk

Basically, as noted before in this thread, 'SDK Setup.exe' invokes tools\android.bat, which makes it impossible for it to rename the tools directory thereafter.  It's a bit goofy and should never have passed QA validation..

网关被其他机器冲掉
-------------------

   ping 192.168.1.154会ping 到56,不能上网.
   解决: 
   先取得154的mac地址
   arp -a 
   192.168.1.254         00-0f-e2-8e-00-a5     dynamic 
   删除所有绑定
   arp -d
   绑定154
   arp -s 192.168.1.254  00-0f-e2-8e-00-a5

   win7 下：
   1、先运行：netsh i i show in 找到正在使用的网卡idx号
   2、然后运行：netsh -c i i add neighbors 11 192.168.1.1 00-21-27-bc-89-48 就可以进行绑定了，这里11是idx号。
   在Win7和Vista上用ARP -D并不能完全的删除绑定
   必须使用
   netsh -c i i delete neighbors IDX (IDX改为相应的数字)
   才可删除MAC地址绑定


不用再右键点开本地连接,更改IP,在批处理文件中实现IP地址变更 
----------------------------------------------------------

   netsh int ip set address name="本地连接" source=static addr=128.0.0.92 mask=255.255.255.0 gateway=128.0.0.1 gwmetric=1 


在 Windows、Linux 操作系统，分别利用BAT批处理文件和Shell脚本，生成类似“20110228_082905.txt”以“年月日_时分秒”命名的文件。
---------------------------------------------------------------------------------------------------------------------------

　　Windows BAT批处理文件：
@echo off
set time_hh=%time:~0,2%
if /i %time_hh% LSS 10 (set time_hh=0%time:~1,1%)
set filename=%date:~,4%%date:~5,2%%date:~8,2%_%time_hh%%time:~3,2%%time:~6,2%
echo test >> %filename%.txt

　　Linux Shell 脚本：
#!/bin/sh
echo test >> $(date -d "today" +"%Y%m%d_%H%M%S").txt

   --END

